{"is_source_file": true, "format": "Dart", "description": "This file defines the NotesDatabase class, which handles all local SQLite operations for notes in a Flutter application. It manages database initialization, CRUD operations for notes, and retrieval of categories. It also seeds the database with an initial example note.", "external_files": ["package:path/path.dart", "package:sqflite/sqflite.dart", "package:notes_flutter_frontend/models/note.dart"], "external_methods": ["getDatabasesPath()", "openDatabase()", "Note.toMap()", "Note.fromMap()", "Note.copyWith()"], "published": ["NotesDatabase"], "classes": [{"name": "NotesDatabase", "description": "Singleton class managing SQLite operations for notes, including database setup, CRUD operations, and category retrieval."}], "methods": [{"name": "init", "description": "Initializes the database, creating tables if necessary and seeding with an example note."}, {"name": "getNotes", "description": "Retrieves a list of notes filtered by optional search query and category."}, {"name": "insertNote", "description": "Inserts a new note into the database and returns the inserted note with ID."}, {"name": "updateNote", "description": "Updates an existing note in the database."}, {"name": "deleteNote", "description": "Deletes a note by its ID."}, {"name": "getAllCategories", "description": "Retrieves a sorted list of all categories, including a default 'All' category."}], "calls": ["getDatabasesPath()", "openDatabase()", "db.execute()", "db.insert()", "db.query()", "db.update()", "db.delete()", "db.rawQuery()"], "search-terms": ["NotesDatabase", "SQLite", "local database", "notes CRUD", "categories", "seeding database", "Flutter SQLite"], "state": 2, "file_id": 19, "knowledge_revision": 39, "git_revision": "", "hash": "76b1a93986b10a6d3ff00ba930c82990", "format-version": 4, "code-base-name": "notes_flutter_frontend", "filename": "notes_flutter_frontend/lib/data/notes_database.dart", "revision_history": [{"39": ""}]}